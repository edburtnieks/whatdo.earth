---
import { z } from 'zod';
import { db } from '../db';

const countryList = await db.selectFrom('country').selectAll().execute();

if (Astro.request.method === 'POST') {
    const formData = await Astro.request.formData();
    const intent = formData.get('intent');

    if (intent === 'add-country') {
        const countryName = formData.get('country-name');
        const countryKey = formData.get('country-key');

        // Validate
        const countrySchema = z.object({
            name: z.string(),
            key: z.string(),
        });

        const parsedCountry = countrySchema.safeParse({
            name: countryName,
            key: countryKey,
        });

        if (!parsedCountry.success) {
            return;
        }

        // Create entry
        await db.insertInto('country').values(parsedCountry.data).execute();

        const response = await fetch(
            'https://api.github.com/repos/edburtnieks/whatdo.earth/actions/workflows/main.yml/dispatches',
            {
                method: 'POST',
                headers: {
                    Accept: 'application/vnd.github+json',
                    Authorization: `Bearer ${import.meta.env.GITHUB_TOKEN}`,
                },
                body: JSON.stringify({
                    ref: 'main',
                }),
            }
        );

        console.log({ response });

        const data = await response.json();

        console.log({ data });
    }
}

const showDrafts = !!(Astro.url.searchParams.get('show-drafts') === 'true');
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>whatdo.earth</title>
    </head>
    <body>
        <h1>Home</h1>
        <h2>Add country</h2>
        <form method="post">
            <label for="country-name">Name</label>
            <input type="text" name="country-name" id="country-name" required />
            <label for="country-key">Key</label>
            <input type="text" name="country-key" id="country-key" required />
            <button type="submit" name="intent" value="add-country">Add country</button>
        </form>
        <h2 id="countries-title">Countries</h2>
        <ul aria-labelledby="countries-title">
            {
                countryList.map((country) => {
                    if (!country.draft) {
                        return (
                            <li>
                                <a href={country.key}>{country.name}</a>
                            </li>
                        );
                    } else if (showDrafts) {
                        return (
                            <li>
                                <a href={country.key}>
                                    <span>{country.name}</span>
                                    {<span>(Draft)</span>}
                                </a>
                            </li>
                        );
                    }
                })
            }
        </ul>
    </body>
</html>
